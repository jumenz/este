<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">

	<!-- Einstellungen f�r Web-Anwednungen mit Spring -->

    <display-name>Fussball</display-name>
    <description>Fussball</description>

   <!-- Default profile is "jpa" (see business-config.xml for more details). 
   When using Spring JDBC, uncomment the following: -->
   <!--  <context-param>
        <param-name>spring.profiles.active</param-name>
        <param-value>jdbc</param-value>
    </context-param>  -->

   <!--  When using Spring Data JPA, uncomment the following: -->
   <!--
   	<context-param>
        <param-name>spring.profiles.active</param-name>
		<param-value>spring-data-jpa</param-value>
    </context-param>
	-->

    <!--
		- Location der XML Datei, die den root application context definiert.
		- Wird von ContextLoaderListener angewandt.
	-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring/applicationContext.xml</param-value>
    </context-param>

	<!-- Listener für Web Application Context -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

	<!-- DispatcherServlet dient als Front Controller, der eingehende Reqeuests
		an andere Komponenten (z.B.MVC Controller) weiterleitet -->
    <servlet>
        <servlet-name>fussball</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/applicationContext.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

	<!-- 
		Angabe auf welche URLs der Dispatcher h�ren soll (hier alle, um URLs einfach zu halten) 
		Alternativ w�re z.B. /app/ m�glich, damit f�r statische Seiten kein Dispatcher 
		verwendet wird
		Um statische Seiten nicht �ber Dispatcher zu laden: <mvc:ressources> verwenden)
	-->
    <servlet-mapping>
        <servlet-name>fussball</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

	<!--  
		DelegatingFilterProxy: delegiert weiter an javax.servlet.Filter (als bean im application context),
								wird automatisch unter angegebenem Filter-Namen erzeugt
	-->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
			<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
    <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>
    
</web-app>