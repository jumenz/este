<?xml version="1.0" encoding="UTF-8"?>
<!--
	- DispatcherServlet application context.
	- MVC config
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       	 http://www.springframework.org/schema/oxm
         http://www.springframework.org/schema/oxm/spring-oxm.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc.xsd
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">    
         
    <!-- 
    	mapping für statische Ressourcen 
    	Verhindert, dass für statische Seiten der DispatcherController aufgerufen wird
    	-> Hier liegen Dateien wie css, js, Bilder ...
    -->
    <mvc:resources mapping="/resources/**" location="/resources/" />  
    
    <!-- 
    	Einschalten von Annotationen (wie @Controller)
     -->   
    <mvc:annotation-driven/>
    
    <!--
    - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
    - and uses the requested media type (determined by the path extension) to pick a matching view. 
    - When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView, 
    - otherwise to the BeanNameViewResolver.
    -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="viewResolvers">
        	<list>
        		 <!-- Default viewClass: JSTL view (JSP mit html output) -->
			    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			        <!-- Beispiel: logischer view name von "reports" wird gemappt auf '/WEB-INF/jsp/reports.jsp' -->
			        <property name="prefix" value="/WEB-INF/jsp/"/>
			        <property name="suffix" value=".jsp"/>
			    </bean>
        	</list>
        </property>
    </bean>
    
    <!-- Exception Resolver -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- view name resolved benutzt bean vom Typ InternalResourceViewResolver (siehe oben) -->
        <property name="defaultErrorView" value="exception"/>
        <!-- wird zu 'WEB-INF/jsp/exception.jsp' -->
        <property name="warnLogCategory" value="warn"/>
        <!-- notwendig, da Exceptions nirgendwo geloggt werden -->
    </bean>

	<!-- 
		Multipart Resolver 
		Extrahiert MultipartData aus Post Request, damit der Dispatcher Servlet diese an die Controller weitergeben kann.
	-->
	<bean 	id="multipartResolver"
			class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
			p:maxUploadSize="500000"
	/>
</beans>
